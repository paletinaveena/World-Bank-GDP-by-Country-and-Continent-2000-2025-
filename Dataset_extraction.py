{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/naveenapaleti/country-gdp-dataset-2000-2025?scriptVersionId=263633785\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","id":"61a642ad","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2025-09-23T22:14:01.180286Z","iopub.status.busy":"2025-09-23T22:14:01.180027Z","iopub.status.idle":"2025-09-23T22:14:01.209145Z","shell.execute_reply":"2025-09-23T22:14:01.208123Z","shell.execute_reply.started":"2025-09-23T22:14:01.180266Z"},"papermill":{"duration":0.003916,"end_time":"2025-09-23T23:15:44.972684","exception":false,"start_time":"2025-09-23T23:15:44.968768","status":"completed"},"tags":[]},"source":["# Country GDP Dataset (2000–2025)\n","\n","This notebook fetches GDP (current US$) for all countries from the World Bank API, maps them into the 7 classic continents (Asia, Africa, Europe, North America, South America, Australia, Antarctica), and outputs a wide-format CSV"]},{"cell_type":"markdown","id":"c5b73448","metadata":{"execution":{"iopub.execute_input":"2025-09-23T22:20:30.021734Z","iopub.status.busy":"2025-09-23T22:20:30.021372Z","iopub.status.idle":"2025-09-23T22:20:30.027879Z","shell.execute_reply":"2025-09-23T22:20:30.026889Z","shell.execute_reply.started":"2025-09-23T22:20:30.021709Z"},"papermill":{"duration":0.002737,"end_time":"2025-09-23T23:15:44.978572","exception":false,"start_time":"2025-09-23T23:15:44.975835","status":"completed"},"tags":[]},"source":["\n","GDP by country (current US$) 2000–2025, wide format, 7-continent mapping.\n","\n","Input: \"https://api.worldbank.org/v2\"\n","\n","Output CSV: gdp_2000_2025.csv\n","\n","Columns: Name of country, Continent, 2000, 2001, ..., 2025\n"]},{"cell_type":"code","execution_count":1,"id":"b5e3273b","metadata":{"execution":{"iopub.execute_input":"2025-09-23T23:15:44.985713Z","iopub.status.busy":"2025-09-23T23:15:44.985374Z","iopub.status.idle":"2025-09-23T23:15:46.925406Z","shell.execute_reply":"2025-09-23T23:15:46.924563Z"},"papermill":{"duration":1.945568,"end_time":"2025-09-23T23:15:46.927079","exception":false,"start_time":"2025-09-23T23:15:44.981511","status":"completed"},"tags":[]},"outputs":[],"source":["import requests\n","import pandas as pd"]},{"cell_type":"markdown","id":"bb9ce12e","metadata":{"papermill":{"duration":0.002755,"end_time":"2025-09-23T23:15:46.933025","exception":false,"start_time":"2025-09-23T23:15:46.93027","status":"completed"},"tags":[]},"source":["# Configuration\n","\n","Here we define the indicator (NY.GDP.MKTP.CD → GDP in current US$), the time range, and continent mapping rules."]},{"cell_type":"code","execution_count":2,"id":"b3a05b5f","metadata":{"execution":{"iopub.execute_input":"2025-09-23T23:15:46.940036Z","iopub.status.busy":"2025-09-23T23:15:46.939602Z","iopub.status.idle":"2025-09-23T23:15:46.943869Z","shell.execute_reply":"2025-09-23T23:15:46.94309Z"},"papermill":{"duration":0.009289,"end_time":"2025-09-23T23:15:46.945166","exception":false,"start_time":"2025-09-23T23:15:46.935877","status":"completed"},"tags":[]},"outputs":[],"source":["WB_BASE = \"https://api.worldbank.org/v2\"\n","GDP_INDICATOR = \"NY.GDP.MKTP.CD\"\n","START_YEAR, END_YEAR = 2000, 2025"]},{"cell_type":"markdown","id":"b2f9599b","metadata":{"papermill":{"duration":0.002661,"end_time":"2025-09-23T23:15:46.950731","exception":false,"start_time":"2025-09-23T23:15:46.94807","status":"completed"},"tags":[]},"source":["# Continent Mapping\n","\n","World Bank groups (e.g., East Asia & Pacific) don’t match the 7 continents. We fix that with explicit ISO3 sets and rules."]},{"cell_type":"code","execution_count":3,"id":"91172b98","metadata":{"execution":{"iopub.execute_input":"2025-09-23T23:15:46.957514Z","iopub.status.busy":"2025-09-23T23:15:46.95721Z","iopub.status.idle":"2025-09-23T23:15:46.962675Z","shell.execute_reply":"2025-09-23T23:15:46.961864Z"},"papermill":{"duration":0.010479,"end_time":"2025-09-23T23:15:46.964057","exception":false,"start_time":"2025-09-23T23:15:46.953578","status":"completed"},"tags":[]},"outputs":[],"source":["# Oceania (map to \"Australia\")\n","OCEANIA_SET = {\n","    # sovereigns\n","    \"AUS\",\"NZL\",\"FJI\",\"PNG\",\"SLB\",\"VUT\",\"WSM\",\"TON\",\"KIR\",\"TUV\",\"NRU\",\"PLW\",\"FSM\",\"MHL\",\n","    # territories & affiliates often in WB country list\n","    \"ASM\",\"GUM\",\"MNP\",\"PYF\",\"COK\",\"NIU\",\"NCL\",\"WLF\",\"TKL\"\n","}\n","\n","# Central Asia + Caucasus (WB puts these in \"Europe & Central Asia\", but we want Asia)\n","CENTRAL_ASIA_SET = {\"KAZ\",\"KGZ\",\"TJK\",\"TKM\",\"UZB\"}\n","CAUCASUS_SET = {\"ARM\",\"AZE\",\"GEO\"}  # Treat as Asia for this use case\n","\n","# North Africa (subset of MENA -> Africa)\n","NORTH_AFRICA_SET = {\"DZA\",\"EGY\",\"LBY\",\"MAR\",\"TUN\",\"ESH\"}\n","\n","# Some known geographic overrides (just in case WB region suggests otherwise)\n","ISO_OVERRIDE = {\n","    \"GRL\": \"North America\",  # Greenland is geographically NA\n","    \"TUR\": \"Asia\",           # treat Turkey as Asia here\n","    \"CYP\": \"Asia\",           # Cyprus geographically in Asia (politically EU)\n","}"]},{"cell_type":"markdown","id":"00c03548","metadata":{"papermill":{"duration":0.002712,"end_time":"2025-09-23T23:15:46.969815","exception":false,"start_time":"2025-09-23T23:15:46.967103","status":"completed"},"tags":[]},"source":["# Helper Functions\n","\n","- fetch_all_pages: handles pagination in World Bank API\n","- map_continent7: maps WB regions + ISO3 → 7 continents"]},{"cell_type":"code","execution_count":4,"id":"74b44daf","metadata":{"execution":{"iopub.execute_input":"2025-09-23T23:15:46.977066Z","iopub.status.busy":"2025-09-23T23:15:46.976525Z","iopub.status.idle":"2025-09-23T23:15:46.982237Z","shell.execute_reply":"2025-09-23T23:15:46.981484Z"},"papermill":{"duration":0.010746,"end_time":"2025-09-23T23:15:46.983519","exception":false,"start_time":"2025-09-23T23:15:46.972773","status":"completed"},"tags":[]},"outputs":[],"source":["def fetch_all_pages(url, params):\n","    out, page = [], 1\n","    while True:\n","        resp = requests.get(url, params={**params, \"page\": page}, timeout=60)\n","        resp.raise_for_status()\n","        data = resp.json()\n","        if not isinstance(data, list) or len(data) < 2:\n","            break\n","        meta, rows = data[0], data[1]\n","        if not rows:\n","            break\n","        out.extend(rows)\n","        if page >= int(meta.get(\"pages\", 1)):\n","            break\n","        page += 1\n","    return out"]},{"cell_type":"code","execution_count":5,"id":"31969179","metadata":{"execution":{"iopub.execute_input":"2025-09-23T23:15:46.990546Z","iopub.status.busy":"2025-09-23T23:15:46.989974Z","iopub.status.idle":"2025-09-23T23:15:46.99596Z","shell.execute_reply":"2025-09-23T23:15:46.995221Z"},"papermill":{"duration":0.010893,"end_time":"2025-09-23T23:15:46.997298","exception":false,"start_time":"2025-09-23T23:15:46.986405","status":"completed"},"tags":[]},"outputs":[],"source":["def map_continent7(iso3: str, wb_region_value: str) -> str | None:\n","    \"\"\"\n","    Map World Bank region + ISO3 to one of:\n","    Asia, North America, Africa, South America, Europe, Antarctica, Australia\n","    \"\"\"\n","    # Hard overrides first\n","    if iso3 in ISO_OVERRIDE:\n","        return ISO_OVERRIDE[iso3]\n","    if iso3 in OCEANIA_SET:\n","        return \"Australia\"\n","    if iso3 in CENTRAL_ASIA_SET or iso3 in CAUCASUS_SET:\n","        return \"Asia\"\n","    if iso3 in NORTH_AFRICA_SET:\n","        return \"Africa\"\n","\n","    # WB region routing\n","    r = wb_region_value\n","    if r == \"East Asia & Pacific\":\n","        # non-Oceania EAP -> Asia\n","        return \"Asia\"\n","    if r == \"South Asia\":\n","        return \"Asia\"\n","    if r == \"Middle East & North Africa\":\n","        # remaining MENA (not North Africa) -> Asia\n","        return \"Asia\"\n","    if r == \"Europe & Central Asia\":\n","        # Central Asia handled; rest -> Europe by default\n","        return \"Europe\"\n","    if r == \"Sub-Saharan Africa\":\n","        return \"Africa\"\n","    if r == \"Latin America & Caribbean\":\n","        # Collapsing LAC to North America per 7-continent spec request\n","        return \"North America\"\n","    if r == \"North America\":\n","        return \"North America\"\n","    if r == \"Aggregates\":\n","        return None  # skip aggregates\n","\n","    # Fallback: None (skip)\n","    return None"]},{"cell_type":"markdown","id":"bc6e9790","metadata":{"papermill":{"duration":0.003579,"end_time":"2025-09-23T23:15:47.003932","exception":false,"start_time":"2025-09-23T23:15:47.000353","status":"completed"},"tags":[]},"source":["# Fetch Country Metadata\n","\n","Get all countries from the World Bank API, map them to the 7 continents, and store in a DataFrame."]},{"cell_type":"code","execution_count":6,"id":"d7e6197d","metadata":{"execution":{"iopub.execute_input":"2025-09-23T23:15:47.010921Z","iopub.status.busy":"2025-09-23T23:15:47.0106Z","iopub.status.idle":"2025-09-23T23:15:47.016383Z","shell.execute_reply":"2025-09-23T23:15:47.015659Z"},"papermill":{"duration":0.010904,"end_time":"2025-09-23T23:15:47.017726","exception":false,"start_time":"2025-09-23T23:15:47.006822","status":"completed"},"tags":[]},"outputs":[],"source":["def get_countries():\n","    url = f\"{WB_BASE}/country\"\n","    rows = fetch_all_pages(url, params={\"format\": \"json\", \"per_page\": 500})\n","    clean = []\n","    for r in rows:\n","        region_val = r.get(\"region\", {}).get(\"value\")\n","        if region_val == \"Aggregates\":\n","            continue\n","        iso3 = r.get(\"id\")\n","        name = r.get(\"name\")\n","        cont7 = map_continent7(iso3, region_val)\n","        if cont7 is None:\n","            # If truly unmapped or Antarctica (no GDP countries), skip\n","            continue\n","        clean.append({\n","            \"iso3c\": iso3,\n","            \"Name of country\": name,\n","            \"Continent\": cont7,\n","        })\n","    return pd.DataFrame(clean).dropna().drop_duplicates(subset=[\"iso3c\"])"]},{"cell_type":"markdown","id":"18981905","metadata":{"papermill":{"duration":0.002747,"end_time":"2025-09-23T23:15:47.023486","exception":false,"start_time":"2025-09-23T23:15:47.020739","status":"completed"},"tags":[]},"source":["# Fetch GDP Data\n","\n","Download GDP (current US$) from 2000–2025 for all real countries."]},{"cell_type":"code","execution_count":7,"id":"685ecc97","metadata":{"execution":{"iopub.execute_input":"2025-09-23T23:15:47.030169Z","iopub.status.busy":"2025-09-23T23:15:47.029924Z","iopub.status.idle":"2025-09-23T23:15:47.035384Z","shell.execute_reply":"2025-09-23T23:15:47.03468Z"},"papermill":{"duration":0.010293,"end_time":"2025-09-23T23:15:47.03664","exception":false,"start_time":"2025-09-23T23:15:47.026347","status":"completed"},"tags":[]},"outputs":[],"source":["def get_gdp(iso_filter):\n","    url = f\"{WB_BASE}/country/all/indicator/{GDP_INDICATOR}\"\n","    rows = fetch_all_pages(\n","        url,\n","        params={\"format\": \"json\", \"per_page\": 20000, \"date\": f\"{START_YEAR}:{END_YEAR}\"}\n","    )\n","    tidy = []\n","    for r in rows:\n","        iso = r.get(\"countryiso3code\")\n","        if iso not in iso_filter:\n","            continue\n","        try:\n","            y = int(r.get(\"date\"))\n","        except (TypeError, ValueError):\n","            continue\n","        tidy.append({\"iso3c\": iso, \"Year\": y, \"GDP\": r.get(\"value\")})\n","    return pd.DataFrame(tidy)"]},{"cell_type":"markdown","id":"b5cabe41","metadata":{"papermill":{"duration":0.002669,"end_time":"2025-09-23T23:15:47.042334","exception":false,"start_time":"2025-09-23T23:15:47.039665","status":"completed"},"tags":[]},"source":["# Main"]},{"cell_type":"code","execution_count":8,"id":"beb40cc3","metadata":{"execution":{"iopub.execute_input":"2025-09-23T23:15:47.04902Z","iopub.status.busy":"2025-09-23T23:15:47.04877Z","iopub.status.idle":"2025-09-23T23:15:47.59365Z","shell.execute_reply":"2025-09-23T23:15:47.592383Z"},"papermill":{"duration":0.5501,"end_time":"2025-09-23T23:15:47.595248","exception":false,"start_time":"2025-09-23T23:15:47.045148","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Saved gdp_2000_2025.csv\n","Year Name of country      Continent          2000          2001          2002  \\\n","15             India           Asia  4.683955e+11  4.854401e+11  5.149391e+11   \n","38    American Samoa      Australia           NaN           NaN  5.120000e+08   \n","39         Australia      Australia  4.161678e+11  3.796293e+11  3.957887e+11   \n","106    United States  North America  1.025095e+13  1.058193e+13  1.092911e+13   \n","\n","Year          2003          2004          2005          2006          2007  \\\n","15    6.077007e+11  7.091527e+11  8.203838e+11  9.402599e+11  1.216736e+12   \n","38    5.240000e+08  5.090000e+08  5.000000e+08  4.930000e+08  5.180000e+08   \n","39    4.677391e+11  6.146600e+11  6.956929e+11  7.484176e+11  8.550075e+11   \n","106   1.145645e+13  1.221720e+13  1.303920e+13  1.381558e+13  1.447423e+13   \n","\n","Year  ...          2016          2017          2018          2019  \\\n","15    ...  2.294797e+12  2.651474e+12  2.702930e+12  2.835606e+12   \n","38    ...  6.710000e+08  6.120000e+08  6.390000e+08  6.470000e+08   \n","39    ...  1.206837e+12  1.325583e+12  1.427809e+12  1.392724e+12   \n","106   ...  1.880491e+13  1.961210e+13  2.065652e+13  2.153998e+13   \n","\n","Year          2020          2021          2022          2023          2024  \\\n","15    2.674852e+12  3.167271e+12  3.346107e+12  3.638489e+12  3.912686e+12   \n","38    7.210000e+08  7.500000e+08  8.710000e+08           NaN           NaN   \n","39    1.328414e+12  1.556736e+12  1.690858e+12  1.728057e+12  1.752193e+12   \n","106   2.135410e+13  2.368117e+13  2.600689e+13  2.772071e+13  2.918489e+13   \n","\n","Year  2025  \n","15    <NA>  \n","38    <NA>  \n","39    <NA>  \n","106   <NA>  \n","\n","[4 rows x 28 columns]\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n","  has_large_values = (abs_vals > 1e6).any()\n","/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n"]}],"source":["def main():\n","    countries = get_countries()\n","    gdp_long = get_gdp(set(countries[\"iso3c\"]))\n","\n","    # Merge and pivot to wide format\n","    df = gdp_long.merge(countries, on=\"iso3c\", how=\"left\")\n","    df_wide = df.pivot_table(\n","        index=[\"Name of country\", \"Continent\"],\n","        columns=\"Year\",\n","        values=\"GDP\",\n","        aggfunc=\"first\"\n","    ).reset_index()\n","\n","    # Ensure all requested years exist as columns\n","    years = list(range(START_YEAR, END_YEAR + 1))\n","    for y in years:\n","        if y not in df_wide.columns:\n","            df_wide[y] = pd.NA\n","\n","    # Reorder and sort\n","    df_wide = df_wide[[\"Name of country\", \"Continent\"] + years]\n","    df_wide = df_wide.sort_values([\"Continent\", \"Name of country\"]).reset_index(drop=True)\n","\n","    # Optional: if you want only the 7 continent labels, ensure Antarctica is present (it will have no rows)\n","    # but since there are no Antarctic countries, nothing to add.\n","\n","    # Save CSV\n","    out_path = \"gdp_2000_2025.csv\"\n","    df_wide.to_csv(out_path, index=False)\n","    print(f\"Saved {out_path}\")\n","    # quick sanity peek\n","    print(df_wide[df_wide[\"Name of country\"].isin([\"Australia\",\"American Samoa\",\"India\",\"United States\"])].head())\n","\n","if __name__ == \"__main__\":\n","    main()"]},{"cell_type":"code","execution_count":null,"id":"f33c1810","metadata":{"papermill":{"duration":0.00306,"end_time":"2025-09-23T23:15:47.601811","exception":false,"start_time":"2025-09-23T23:15:47.598751","status":"completed"},"tags":[]},"outputs":[],"source":[]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":31089,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.13"},"papermill":{"default_parameters":{},"duration":7.977501,"end_time":"2025-09-23T23:15:48.023341","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2025-09-23T23:15:40.04584","version":"2.6.0"}},"nbformat":4,"nbformat_minor":5}