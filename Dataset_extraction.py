{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/naveenapaleti/country-gdp-dataset-2000-2025?scriptVersionId=263639864\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","id":"fca80612","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2025-09-23T22:14:01.180286Z","iopub.status.busy":"2025-09-23T22:14:01.180027Z","iopub.status.idle":"2025-09-23T22:14:01.209145Z","shell.execute_reply":"2025-09-23T22:14:01.208123Z","shell.execute_reply.started":"2025-09-23T22:14:01.180266Z"},"papermill":{"duration":0.004262,"end_time":"2025-09-24T00:26:20.749684","exception":false,"start_time":"2025-09-24T00:26:20.745422","status":"completed"},"tags":[]},"source":["# Country GDP Dataset (2000–2025)\n","\n","This notebook fetches GDP (current US$) for all countries from the World Bank API, maps them into the 7 classic continents (Asia, Africa, Europe, North America, South America, Australia, Antarctica), and outputs a wide-format CSV"]},{"cell_type":"markdown","id":"e5442dd5","metadata":{"execution":{"iopub.execute_input":"2025-09-23T22:20:30.021734Z","iopub.status.busy":"2025-09-23T22:20:30.021372Z","iopub.status.idle":"2025-09-23T22:20:30.027879Z","shell.execute_reply":"2025-09-23T22:20:30.026889Z","shell.execute_reply.started":"2025-09-23T22:20:30.021709Z"},"papermill":{"duration":0.003206,"end_time":"2025-09-24T00:26:20.756524","exception":false,"start_time":"2025-09-24T00:26:20.753318","status":"completed"},"tags":[]},"source":["\n","GDP by country (current US$) 2000–2025, wide format, 7-continent mapping.\n","\n","Input: \"https://api.worldbank.org/v2\"\n","\n","Output CSV: gdp_2000_2025.csv\n","\n","Columns: Name of country, Continent, 2000, 2001, ..., 2025\n"]},{"cell_type":"code","execution_count":1,"id":"0a3ae93b","metadata":{"execution":{"iopub.execute_input":"2025-09-24T00:26:20.76473Z","iopub.status.busy":"2025-09-24T00:26:20.764368Z","iopub.status.idle":"2025-09-24T00:26:22.870327Z","shell.execute_reply":"2025-09-24T00:26:22.869431Z"},"papermill":{"duration":2.112025,"end_time":"2025-09-24T00:26:22.87202","exception":false,"start_time":"2025-09-24T00:26:20.759995","status":"completed"},"tags":[]},"outputs":[],"source":["import requests\n","import pandas as pd"]},{"cell_type":"markdown","id":"a6e4b085","metadata":{"papermill":{"duration":0.003194,"end_time":"2025-09-24T00:26:22.878838","exception":false,"start_time":"2025-09-24T00:26:22.875644","status":"completed"},"tags":[]},"source":["# Configuration\n","\n","Here we define the indicator (NY.GDP.MKTP.CD → GDP in current US$), the time range, and continent mapping rules."]},{"cell_type":"code","execution_count":2,"id":"9e69f77c","metadata":{"execution":{"iopub.execute_input":"2025-09-24T00:26:22.886744Z","iopub.status.busy":"2025-09-24T00:26:22.886301Z","iopub.status.idle":"2025-09-24T00:26:22.89116Z","shell.execute_reply":"2025-09-24T00:26:22.890295Z"},"papermill":{"duration":0.01037,"end_time":"2025-09-24T00:26:22.89262","exception":false,"start_time":"2025-09-24T00:26:22.88225","status":"completed"},"tags":[]},"outputs":[],"source":["WB_BASE = \"https://api.worldbank.org/v2\"\n","GDP_INDICATOR = \"NY.GDP.MKTP.CD\"\n","START_YEAR, END_YEAR = 2000, 2025"]},{"cell_type":"markdown","id":"e32368fa","metadata":{"papermill":{"duration":0.003144,"end_time":"2025-09-24T00:26:22.89918","exception":false,"start_time":"2025-09-24T00:26:22.896036","status":"completed"},"tags":[]},"source":["# Continent Mapping\n","\n","World Bank groups (e.g., East Asia & Pacific) don’t match the 7 continents. We fix that with explicit ISO3 sets and rules."]},{"cell_type":"code","execution_count":3,"id":"add3487d","metadata":{"execution":{"iopub.execute_input":"2025-09-24T00:26:22.907177Z","iopub.status.busy":"2025-09-24T00:26:22.906533Z","iopub.status.idle":"2025-09-24T00:26:22.912339Z","shell.execute_reply":"2025-09-24T00:26:22.911687Z"},"papermill":{"duration":0.011274,"end_time":"2025-09-24T00:26:22.913704","exception":false,"start_time":"2025-09-24T00:26:22.90243","status":"completed"},"tags":[]},"outputs":[],"source":["# Oceania (map to \"Australia\")\n","OCEANIA_SET = {\n","    # sovereigns\n","    \"AUS\",\"NZL\",\"FJI\",\"PNG\",\"SLB\",\"VUT\",\"WSM\",\"TON\",\"KIR\",\"TUV\",\"NRU\",\"PLW\",\"FSM\",\"MHL\",\n","    # territories & affiliates often in WB country list\n","    \"ASM\",\"GUM\",\"MNP\",\"PYF\",\"COK\",\"NIU\",\"NCL\",\"WLF\",\"TKL\"\n","}\n","\n","# Central Asia + Caucasus (WB puts these in \"Europe & Central Asia\", but we want Asia)\n","CENTRAL_ASIA_SET = {\"KAZ\",\"KGZ\",\"TJK\",\"TKM\",\"UZB\"}\n","CAUCASUS_SET = {\"ARM\",\"AZE\",\"GEO\"}  # Treat as Asia for this use case\n","\n","# North Africa (subset of MENA -> Africa)\n","NORTH_AFRICA_SET = {\"DZA\",\"EGY\",\"LBY\",\"MAR\",\"TUN\",\"ESH\"}\n","\n","SOUTH_AMERICA_SET = {\"ARG\",\"BOL\",\"BRA\",\"CHL\",\"COL\",\"ECU\",\"GUY\",\"PER\",\"PRY\",\"SUR\",\"URY\",\"VEN\"}\n","\n","# Some known geographic overrides (just in case WB region suggests otherwise)\n","ISO_OVERRIDE = {\n","    \"GRL\": \"North America\",  # Greenland is geographically NA\n","    \"TUR\": \"Asia\",           # treat Turkey as Asia here\n","    \"CYP\": \"Asia\",           # Cyprus geographically in Asia (politically EU)\n","}"]},{"cell_type":"markdown","id":"ee9f2bdf","metadata":{"papermill":{"duration":0.003097,"end_time":"2025-09-24T00:26:22.920228","exception":false,"start_time":"2025-09-24T00:26:22.917131","status":"completed"},"tags":[]},"source":["# Helper Functions\n","\n","- fetch_all_pages: handles pagination in World Bank API\n","- map_continent7: maps WB regions + ISO3 → 7 continents"]},{"cell_type":"code","execution_count":4,"id":"3d7b9aea","metadata":{"execution":{"iopub.execute_input":"2025-09-24T00:26:22.927958Z","iopub.status.busy":"2025-09-24T00:26:22.927653Z","iopub.status.idle":"2025-09-24T00:26:22.934001Z","shell.execute_reply":"2025-09-24T00:26:22.932746Z"},"papermill":{"duration":0.012067,"end_time":"2025-09-24T00:26:22.935617","exception":false,"start_time":"2025-09-24T00:26:22.92355","status":"completed"},"tags":[]},"outputs":[],"source":["def fetch_all_pages(url, params):\n","    out, page = [], 1\n","    while True:\n","        resp = requests.get(url, params={**params, \"page\": page}, timeout=60)\n","        resp.raise_for_status()\n","        data = resp.json()\n","        if not isinstance(data, list) or len(data) < 2:\n","            break\n","        meta, rows = data[0], data[1]\n","        if not rows:\n","            break\n","        out.extend(rows)\n","        if page >= int(meta.get(\"pages\", 1)):\n","            break\n","        page += 1\n","    return out"]},{"cell_type":"code","execution_count":5,"id":"345a3d3a","metadata":{"execution":{"iopub.execute_input":"2025-09-24T00:26:22.94387Z","iopub.status.busy":"2025-09-24T00:26:22.943535Z","iopub.status.idle":"2025-09-24T00:26:22.950126Z","shell.execute_reply":"2025-09-24T00:26:22.94944Z"},"papermill":{"duration":0.012433,"end_time":"2025-09-24T00:26:22.951599","exception":false,"start_time":"2025-09-24T00:26:22.939166","status":"completed"},"tags":[]},"outputs":[],"source":["def map_continent7(iso3: str, wb_region_value: str) -> str | None:\n","    \"\"\"\n","    Map World Bank region + ISO3 to one of:\n","    Asia, North America, Africa, South America, Europe, Antarctica, Australia\n","    \"\"\"\n","    # Hard overrides first\n","    if iso3 in ISO_OVERRIDE:\n","        return ISO_OVERRIDE[iso3]\n","    if iso3 in SOUTH_AMERICA_SET:       \n","        return \"South America\"\n","    if iso3 in OCEANIA_SET:\n","        return \"Australia\"\n","    if iso3 in CENTRAL_ASIA_SET or iso3 in CAUCASUS_SET:\n","        return \"Asia\"\n","    if iso3 in NORTH_AFRICA_SET:\n","        return \"Africa\"\n","\n","    # WB region routing\n","    r = wb_region_value\n","    if r == \"East Asia & Pacific\":\n","        # non-Oceania EAP -> Asia\n","        return \"Asia\"\n","    if r == \"South Asia\":\n","        return \"Asia\"\n","    if r == \"Middle East & North Africa\":\n","        # remaining MENA (not North Africa) -> Asia\n","        return \"Asia\"\n","    if r == \"Europe & Central Asia\":\n","        # Central Asia handled; rest -> Europe by default\n","        return \"Europe\"\n","    if r == \"Sub-Saharan Africa\":\n","        return \"Africa\"\n","    if r == \"Latin America & Caribbean\":\n","        # Collapsing LAC to North America per 7-continent spec request\n","        return \"North America\"\n","    if r == \"North America\":\n","        return \"North America\"\n","    if r == \"Aggregates\":\n","        return None  # skip aggregates\n","\n","    # Fallback: None (skip)\n","    return None"]},{"cell_type":"markdown","id":"ccd73c83","metadata":{"papermill":{"duration":0.003368,"end_time":"2025-09-24T00:26:22.959687","exception":false,"start_time":"2025-09-24T00:26:22.956319","status":"completed"},"tags":[]},"source":["# Fetch Country Metadata\n","\n","Get all countries from the World Bank API, map them to the 7 continents, and store in a DataFrame."]},{"cell_type":"code","execution_count":6,"id":"b53fdec1","metadata":{"execution":{"iopub.execute_input":"2025-09-24T00:26:22.967554Z","iopub.status.busy":"2025-09-24T00:26:22.967262Z","iopub.status.idle":"2025-09-24T00:26:22.973178Z","shell.execute_reply":"2025-09-24T00:26:22.972451Z"},"papermill":{"duration":0.011535,"end_time":"2025-09-24T00:26:22.974593","exception":false,"start_time":"2025-09-24T00:26:22.963058","status":"completed"},"tags":[]},"outputs":[],"source":["def get_countries():\n","    url = f\"{WB_BASE}/country\"\n","    rows = fetch_all_pages(url, params={\"format\": \"json\", \"per_page\": 500})\n","    clean = []\n","    for r in rows:\n","        region_val = r.get(\"region\", {}).get(\"value\")\n","        if region_val == \"Aggregates\":\n","            continue\n","        iso3 = r.get(\"id\")\n","        name = r.get(\"name\")\n","        cont7 = map_continent7(iso3, region_val)\n","        if cont7 is None:\n","            # If truly unmapped or Antarctica (no GDP countries), skip\n","            continue\n","        clean.append({\n","            \"iso3c\": iso3,\n","            \"Name of country\": name,\n","            \"Continent\": cont7,\n","        })\n","    return pd.DataFrame(clean).dropna().drop_duplicates(subset=[\"iso3c\"])"]},{"cell_type":"markdown","id":"f8f48b52","metadata":{"papermill":{"duration":0.003292,"end_time":"2025-09-24T00:26:22.981511","exception":false,"start_time":"2025-09-24T00:26:22.978219","status":"completed"},"tags":[]},"source":["# Fetch GDP Data\n","\n","Download GDP (current US$) from 2000–2025 for all real countries."]},{"cell_type":"code","execution_count":7,"id":"abbde979","metadata":{"execution":{"iopub.execute_input":"2025-09-24T00:26:22.989817Z","iopub.status.busy":"2025-09-24T00:26:22.989519Z","iopub.status.idle":"2025-09-24T00:26:22.995537Z","shell.execute_reply":"2025-09-24T00:26:22.994662Z"},"papermill":{"duration":0.011808,"end_time":"2025-09-24T00:26:22.997036","exception":false,"start_time":"2025-09-24T00:26:22.985228","status":"completed"},"tags":[]},"outputs":[],"source":["def get_gdp(iso_filter):\n","    url = f\"{WB_BASE}/country/all/indicator/{GDP_INDICATOR}\"\n","    rows = fetch_all_pages(\n","        url,\n","        params={\"format\": \"json\", \"per_page\": 20000, \"date\": f\"{START_YEAR}:{END_YEAR}\"}\n","    )\n","    tidy = []\n","    for r in rows:\n","        iso = r.get(\"countryiso3code\")\n","        if iso not in iso_filter:\n","            continue\n","        try:\n","            y = int(r.get(\"date\"))\n","        except (TypeError, ValueError):\n","            continue\n","        tidy.append({\"iso3c\": iso, \"Year\": y, \"GDP\": r.get(\"value\")})\n","    return pd.DataFrame(tidy)"]},{"cell_type":"markdown","id":"1c495b96","metadata":{"papermill":{"duration":0.003267,"end_time":"2025-09-24T00:26:23.00411","exception":false,"start_time":"2025-09-24T00:26:23.000843","status":"completed"},"tags":[]},"source":["# Main"]},{"cell_type":"code","execution_count":8,"id":"1192dc7f","metadata":{"execution":{"iopub.execute_input":"2025-09-24T00:26:23.012274Z","iopub.status.busy":"2025-09-24T00:26:23.011981Z","iopub.status.idle":"2025-09-24T00:26:23.802242Z","shell.execute_reply":"2025-09-24T00:26:23.80144Z"},"papermill":{"duration":0.796325,"end_time":"2025-09-24T00:26:23.803917","exception":false,"start_time":"2025-09-24T00:26:23.007592","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Saved gdp_2000_2025.csv\n","Year Name of country      Continent          2000          2001          2002  \\\n","15             India           Asia  4.683955e+11  4.854401e+11  5.149391e+11   \n","38    American Samoa      Australia           NaN           NaN  5.120000e+08   \n","39         Australia      Australia  4.161678e+11  3.796293e+11  3.957887e+11   \n","106    United States  North America  1.025095e+13  1.058193e+13  1.092911e+13   \n","\n","Year          2003          2004          2005          2006          2007  \\\n","15    6.077007e+11  7.091527e+11  8.203838e+11  9.402599e+11  1.216736e+12   \n","38    5.240000e+08  5.090000e+08  5.000000e+08  4.930000e+08  5.180000e+08   \n","39    4.677391e+11  6.146600e+11  6.956929e+11  7.484176e+11  8.550075e+11   \n","106   1.145645e+13  1.221720e+13  1.303920e+13  1.381558e+13  1.447423e+13   \n","\n","Year  ...          2016          2017          2018          2019  \\\n","15    ...  2.294797e+12  2.651474e+12  2.702930e+12  2.835606e+12   \n","38    ...  6.710000e+08  6.120000e+08  6.390000e+08  6.470000e+08   \n","39    ...  1.206837e+12  1.325583e+12  1.427809e+12  1.392724e+12   \n","106   ...  1.880491e+13  1.961210e+13  2.065652e+13  2.153998e+13   \n","\n","Year          2020          2021          2022          2023          2024  \\\n","15    2.674852e+12  3.167271e+12  3.346107e+12  3.638489e+12  3.912686e+12   \n","38    7.210000e+08  7.500000e+08  8.710000e+08           NaN           NaN   \n","39    1.328414e+12  1.556736e+12  1.690858e+12  1.728057e+12  1.752193e+12   \n","106   2.135410e+13  2.368117e+13  2.600689e+13  2.772071e+13  2.918489e+13   \n","\n","Year  2025  \n","15    <NA>  \n","38    <NA>  \n","39    <NA>  \n","106   <NA>  \n","\n","[4 rows x 28 columns]\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n","  has_large_values = (abs_vals > 1e6).any()\n","/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n"]}],"source":["def main():\n","    countries = get_countries()\n","    gdp_long = get_gdp(set(countries[\"iso3c\"]))\n","\n","    # Merge and pivot to wide format\n","    df = gdp_long.merge(countries, on=\"iso3c\", how=\"left\")\n","    df_wide = df.pivot_table(\n","        index=[\"Name of country\", \"Continent\"],\n","        columns=\"Year\",\n","        values=\"GDP\",\n","        aggfunc=\"first\"\n","    ).reset_index()\n","\n","    # Ensure all requested years exist as columns\n","    years = list(range(START_YEAR, END_YEAR + 1))\n","    for y in years:\n","        if y not in df_wide.columns:\n","            df_wide[y] = pd.NA\n","\n","    # Reorder and sort\n","    df_wide = df_wide[[\"Name of country\", \"Continent\"] + years]\n","    df_wide = df_wide.sort_values([\"Continent\", \"Name of country\"]).reset_index(drop=True)\n","\n","    # Optional: if you want only the 7 continent labels, ensure Antarctica is present (it will have no rows)\n","    # but since there are no Antarctic countries, nothing to add.\n","\n","    # Save CSV\n","    out_path = \"gdp_2000_2025.csv\"\n","    df_wide.to_csv(out_path, index=False)\n","    print(f\"Saved {out_path}\")\n","    # quick sanity peek\n","    print(df_wide[df_wide[\"Name of country\"].isin([\"Australia\",\"American Samoa\",\"India\",\"United States\"])].head())\n","\n","if __name__ == \"__main__\":\n","    main()"]},{"cell_type":"code","execution_count":9,"id":"4f5f08f1","metadata":{"execution":{"iopub.execute_input":"2025-09-24T00:26:23.812362Z","iopub.status.busy":"2025-09-24T00:26:23.812071Z","iopub.status.idle":"2025-09-24T00:26:23.82392Z","shell.execute_reply":"2025-09-24T00:26:23.823128Z"},"papermill":{"duration":0.017713,"end_time":"2025-09-24T00:26:23.825249","exception":false,"start_time":"2025-09-24T00:26:23.807536","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["(119, 28)"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["df = pd.read_csv(\"/kaggle/working/gdp_2000_2025.csv\")\n","\n","df.shape"]},{"cell_type":"code","execution_count":10,"id":"e8282ba3","metadata":{"execution":{"iopub.execute_input":"2025-09-24T00:26:23.833822Z","iopub.status.busy":"2025-09-24T00:26:23.833534Z","iopub.status.idle":"2025-09-24T00:26:23.86273Z","shell.execute_reply":"2025-09-24T00:26:23.861681Z"},"papermill":{"duration":0.035159,"end_time":"2025-09-24T00:26:23.864176","exception":false,"start_time":"2025-09-24T00:26:23.829017","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n","  has_large_values = (abs_vals > 1e6).any()\n","/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n","  has_large_values = (abs_vals > 1e6).any()\n","/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n"]},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name of country</th>\n","      <th>Continent</th>\n","      <th>2000</th>\n","      <th>2001</th>\n","      <th>2002</th>\n","      <th>2003</th>\n","      <th>2004</th>\n","      <th>2005</th>\n","      <th>2006</th>\n","      <th>2007</th>\n","      <th>...</th>\n","      <th>2016</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","      <th>2020</th>\n","      <th>2021</th>\n","      <th>2022</th>\n","      <th>2023</th>\n","      <th>2024</th>\n","      <th>2025</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>114</th>\n","      <td>Paraguay</td>\n","      <td>South America</td>\n","      <td>8.855705e+09</td>\n","      <td>8.495806e+09</td>\n","      <td>7.196261e+09</td>\n","      <td>7.691367e+09</td>\n","      <td>9.624441e+09</td>\n","      <td>1.073750e+10</td>\n","      <td>1.342943e+10</td>\n","      <td>1.785639e+10</td>\n","      <td>...</td>\n","      <td>3.608970e+10</td>\n","      <td>3.899713e+10</td>\n","      <td>4.022545e+10</td>\n","      <td>3.792534e+10</td>\n","      <td>3.543218e+10</td>\n","      <td>3.995090e+10</td>\n","      <td>4.195291e+10</td>\n","      <td>4.311805e+10</td>\n","      <td>4.445812e+10</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>115</th>\n","      <td>Peru</td>\n","      <td>South America</td>\n","      <td>5.174475e+10</td>\n","      <td>5.203016e+10</td>\n","      <td>5.477755e+10</td>\n","      <td>5.873103e+10</td>\n","      <td>6.676870e+10</td>\n","      <td>7.606061e+10</td>\n","      <td>8.864319e+10</td>\n","      <td>1.021710e+11</td>\n","      <td>...</td>\n","      <td>1.918981e+11</td>\n","      <td>2.110080e+11</td>\n","      <td>2.225970e+11</td>\n","      <td>2.283460e+11</td>\n","      <td>2.014097e+11</td>\n","      <td>2.263288e+11</td>\n","      <td>2.460656e+11</td>\n","      <td>2.669587e+11</td>\n","      <td>2.892220e+11</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>116</th>\n","      <td>Suriname</td>\n","      <td>South America</td>\n","      <td>9.476720e+08</td>\n","      <td>8.342794e+08</td>\n","      <td>1.093574e+09</td>\n","      <td>1.274190e+09</td>\n","      <td>1.484093e+09</td>\n","      <td>1.793410e+09</td>\n","      <td>2.626380e+09</td>\n","      <td>2.936612e+09</td>\n","      <td>...</td>\n","      <td>3.317422e+09</td>\n","      <td>3.591679e+09</td>\n","      <td>3.996199e+09</td>\n","      <td>4.016041e+09</td>\n","      <td>2.911807e+09</td>\n","      <td>3.107923e+09</td>\n","      <td>3.791603e+09</td>\n","      <td>3.455146e+09</td>\n","      <td>4.714268e+09</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>117</th>\n","      <td>Uruguay</td>\n","      <td>South America</td>\n","      <td>2.282327e+10</td>\n","      <td>2.089876e+10</td>\n","      <td>1.360652e+10</td>\n","      <td>1.204564e+10</td>\n","      <td>1.368633e+10</td>\n","      <td>1.736286e+10</td>\n","      <td>1.974142e+10</td>\n","      <td>2.379777e+10</td>\n","      <td>...</td>\n","      <td>5.748079e+10</td>\n","      <td>6.500600e+10</td>\n","      <td>6.534458e+10</td>\n","      <td>6.222231e+10</td>\n","      <td>5.355936e+10</td>\n","      <td>6.073908e+10</td>\n","      <td>7.059411e+10</td>\n","      <td>7.799167e+10</td>\n","      <td>8.096151e+10</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>118</th>\n","      <td>Venezuela, RB</td>\n","      <td>South America</td>\n","      <td>1.171465e+11</td>\n","      <td>1.229110e+11</td>\n","      <td>9.289359e+10</td>\n","      <td>8.362063e+10</td>\n","      <td>1.124514e+11</td>\n","      <td>1.455135e+11</td>\n","      <td>1.834775e+11</td>\n","      <td>2.303640e+11</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 28 columns</p>\n","</div>"],"text/plain":["    Name of country      Continent          2000          2001          2002  \\\n","114        Paraguay  South America  8.855705e+09  8.495806e+09  7.196261e+09   \n","115            Peru  South America  5.174475e+10  5.203016e+10  5.477755e+10   \n","116        Suriname  South America  9.476720e+08  8.342794e+08  1.093574e+09   \n","117         Uruguay  South America  2.282327e+10  2.089876e+10  1.360652e+10   \n","118   Venezuela, RB  South America  1.171465e+11  1.229110e+11  9.289359e+10   \n","\n","             2003          2004          2005          2006          2007  \\\n","114  7.691367e+09  9.624441e+09  1.073750e+10  1.342943e+10  1.785639e+10   \n","115  5.873103e+10  6.676870e+10  7.606061e+10  8.864319e+10  1.021710e+11   \n","116  1.274190e+09  1.484093e+09  1.793410e+09  2.626380e+09  2.936612e+09   \n","117  1.204564e+10  1.368633e+10  1.736286e+10  1.974142e+10  2.379777e+10   \n","118  8.362063e+10  1.124514e+11  1.455135e+11  1.834775e+11  2.303640e+11   \n","\n","     ...          2016          2017          2018          2019  \\\n","114  ...  3.608970e+10  3.899713e+10  4.022545e+10  3.792534e+10   \n","115  ...  1.918981e+11  2.110080e+11  2.225970e+11  2.283460e+11   \n","116  ...  3.317422e+09  3.591679e+09  3.996199e+09  4.016041e+09   \n","117  ...  5.748079e+10  6.500600e+10  6.534458e+10  6.222231e+10   \n","118  ...           NaN           NaN           NaN           NaN   \n","\n","             2020          2021          2022          2023          2024  \\\n","114  3.543218e+10  3.995090e+10  4.195291e+10  4.311805e+10  4.445812e+10   \n","115  2.014097e+11  2.263288e+11  2.460656e+11  2.669587e+11  2.892220e+11   \n","116  2.911807e+09  3.107923e+09  3.791603e+09  3.455146e+09  4.714268e+09   \n","117  5.355936e+10  6.073908e+10  7.059411e+10  7.799167e+10  8.096151e+10   \n","118           NaN           NaN           NaN           NaN           NaN   \n","\n","     2025  \n","114   NaN  \n","115   NaN  \n","116   NaN  \n","117   NaN  \n","118   NaN  \n","\n","[5 rows x 28 columns]"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["df.tail()"]},{"cell_type":"code","execution_count":null,"id":"c3f5cd54","metadata":{"papermill":{"duration":0.003794,"end_time":"2025-09-24T00:26:23.872422","exception":false,"start_time":"2025-09-24T00:26:23.868628","status":"completed"},"tags":[]},"outputs":[],"source":[]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":31089,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.13"},"papermill":{"default_parameters":{},"duration":9.038885,"end_time":"2025-09-24T00:26:24.39551","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2025-09-24T00:26:15.356625","version":"2.6.0"}},"nbformat":4,"nbformat_minor":5}